{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Juanes\\\\Documents\\\\Homeworks\\\\React-Challenges\\\\challenge02-react\\\\src\\\\components\\\\GifGrid.js\",\n  _s = $RefreshSig$();\nimport { GifItem } from \"./GifItem\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getGifs = async category => {\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=66Vvb2WG5U5ACvj6RNlAEcxIpQnQ47WB&q=${category}&limit=1&offset=0&rating=g&lang=en&bundle=messaging_non_clips`;\n  const resp = await fetch(url);\n  const {\n    data\n  } = await resp.json();\n  const gifs = data.map(img => {\n    var _img$images, _img$images$downsized;\n    return {\n      id: img.id,\n      title: img.title,\n      url: ((_img$images = img.images) === null || _img$images === void 0 ? void 0 : (_img$images$downsized = _img$images.downsized_medium) === null || _img$images$downsized === void 0 ? void 0 : _img$images$downsized.url) || 'No existe'\n    };\n  });\n  return gifs;\n};\nexport const GifGrid = ({\n  category\n}) => {\n  _s();\n  const [images, setImages] = useState([]);\n  const getImages = async () => {\n    const images = await getGifs(category);\n    setImages(images);\n  };\n  useEffect(() => {\n    getImages();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: images.map((image, key) => {\n        return /*#__PURE__*/_jsxDEV(GifItem, {\n          ...image\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(GifGrid, \"ScKwoilS3xNJP1q5r1COmrAdDIM=\");\n_c = GifGrid;\nvar _c;\n$RefreshReg$(_c, \"GifGrid\");","map":{"version":3,"names":["GifItem","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","getGifs","category","url","resp","fetch","data","json","gifs","map","img","_img$images","_img$images$downsized","id","title","images","downsized_medium","GifGrid","_s","setImages","getImages","children","fileName","_jsxFileName","lineNumber","columnNumber","className","image","key","_c","$RefreshReg$"],"sources":["C:/Users/Juanes/Documents/Homeworks/React-Challenges/challenge02-react/src/components/GifGrid.js"],"sourcesContent":["import { GifItem } from \"./GifItem\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=66Vvb2WG5U5ACvj6RNlAEcxIpQnQ47WB&q=${category}&limit=1&offset=0&rating=g&lang=en&bundle=messaging_non_clips`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map(img => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium?.url || 'No existe'\r\n      }\r\n    });\r\n  \r\n    return gifs;\r\n  }\r\n  \r\n  export const GifGrid = ({ category }) => {\r\n    const [images, setImages] = useState([]);\r\n\r\n    const getImages = async () => {\r\n        const images = await getGifs(category);\r\n        setImages(images);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getImages();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            <div className=\"card-grid\">\r\n                {images.map((image, key) => {\r\n                    return <GifItem key={key} {...image} />;\r\n                })}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n  \r\n"],"mappings":";;AAAA,SAASA,OAAO,QAAQ,WAAW;AACnC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5C,MAAMC,OAAO,GAAG,MAAOC,QAAQ,IAAK;EAChC,MAAMC,GAAG,GAAG,mFAAmFD,QAAQ,+DAA+D;EACtK,MAAME,IAAI,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;EAC7B,MAAM;IAAEG;EAAK,CAAC,GAAG,MAAMF,IAAI,CAACG,IAAI,CAAC,CAAC;EAClC,MAAMC,IAAI,GAAGF,IAAI,CAACG,GAAG,CAACC,GAAG,IAAI;IAAA,IAAAC,WAAA,EAAAC,qBAAA;IAC3B,OAAO;MACLC,EAAE,EAAEH,GAAG,CAACG,EAAE;MACVC,KAAK,EAAEJ,GAAG,CAACI,KAAK;MAChBX,GAAG,EAAE,EAAAQ,WAAA,GAAAD,GAAG,CAACK,MAAM,cAAAJ,WAAA,wBAAAC,qBAAA,GAAVD,WAAA,CAAYK,gBAAgB,cAAAJ,qBAAA,uBAA5BA,qBAAA,CAA8BT,GAAG,KAAI;IAC5C,CAAC;EACH,CAAC,CAAC;EAEF,OAAOK,IAAI;AACb,CAAC;AAED,OAAO,MAAMS,OAAO,GAAGA,CAAC;EAAEf;AAAS,CAAC,KAAK;EAAAgB,EAAA;EACvC,MAAM,CAACH,MAAM,EAAEI,SAAS,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMwB,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,MAAML,MAAM,GAAG,MAAMd,OAAO,CAACC,QAAQ,CAAC;IACtCiB,SAAS,CAACJ,MAAM,CAAC;EACrB,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACZyB,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACItB,OAAA,CAAAE,SAAA;IAAAqB,QAAA,gBACIvB,OAAA;MAAAuB,QAAA,EAAKnB;IAAQ;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACnB3B,OAAA;MAAK4B,SAAS,EAAC,WAAW;MAAAL,QAAA,EACrBN,MAAM,CAACN,GAAG,CAAC,CAACkB,KAAK,EAAEC,GAAG,KAAK;QACxB,oBAAO9B,OAAA,CAACJ,OAAO;UAAA,GAAeiC;QAAK,GAAdC,GAAG;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc,CAAC;MAC3C,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA,eACR,CAAC;AAEX,CAAC;AAACP,EAAA,CAtBaD,OAAO;AAAAY,EAAA,GAAPZ,OAAO;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}