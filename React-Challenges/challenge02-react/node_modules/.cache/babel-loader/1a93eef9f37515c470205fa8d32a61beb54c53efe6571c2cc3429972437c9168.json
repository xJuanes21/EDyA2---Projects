{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Juanes\\\\Documents\\\\Homeworks\\\\React-Challenges\\\\challenge02-react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React from 'react';\nimport { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n  const [categories, setCategories] = useState(['Zodiac']);\n  const onAddCategory = category => {\n    setCategories(list => [...list, category]);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"GifExpert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddCategory, {\n      onAddCategory: onAddCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), categories.map((category, key) => {\n      return /*#__PURE__*/_jsxDEV(GifGrid, {\n        category: category\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 22\n      }, this);\n    })]\n  }, void 0, true);\n};\n_s(App, \"/DCuDrS7VtWP/QU3tAkN3Xg/qt0=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","AddCategory","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","categories","setCategories","onAddCategory","category","list","children","fileName","_jsxFileName","lineNumber","columnNumber","map","key","GifGrid","_c","$RefreshReg$"],"sources":["C:/Users/Juanes/Documents/Homeworks/React-Challenges/challenge02-react/src/App.js"],"sourcesContent":["import './App.css';\nimport React from 'react';\nimport { useState } from 'react'\nimport {AddCategory } from './components/AddCategory'\n\n\nexport const App = () => {\n\n  const [categories, setCategories] = useState(['Zodiac'])\n\n  const onAddCategory = (category) => {\n    setCategories(list => [...list, category])\n  }\n\n  return (\n    <>\n      <h1>GifExpert</h1>\n      <AddCategory onAddCategory={onAddCategory} />\n      {\n        categories.map(\n          (category, key) =>\n      {\n              return <GifGrid category={category} key={key} />\n            }\n      )\n      }\n    </>\n\n\n\n  );\n}\n\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAAQC,WAAW,QAAQ,0BAA0B;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAGrD,OAAO,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEvB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAExD,MAAMU,aAAa,GAAIC,QAAQ,IAAK;IAClCF,aAAa,CAACG,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAED,QAAQ,CAAC,CAAC;EAC5C,CAAC;EAED,oBACER,OAAA,CAAAE,SAAA;IAAAQ,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBd,OAAA,CAACF,WAAW;MAACS,aAAa,EAAEA;IAAc;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAE3CT,UAAU,CAACU,GAAG,CACZ,CAACP,QAAQ,EAAEQ,GAAG,KAClB;MACQ,oBAAOhB,OAAA,CAACiB,OAAO;QAACT,QAAQ,EAAEA;MAAS,GAAMQ,GAAG;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAClD,CACN,CAAC;EAAA,eAED,CAAC;AAKP,CAAC;AAAAV,EAAA,CAzBYD,GAAG;AAAAe,EAAA,GAAHf,GAAG;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}